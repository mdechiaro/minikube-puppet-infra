# Build a Puppet stack in minikube

This started out as weekend project to learn Kubernetes using minikube.
This project creates a multi-node Puppet stack. The configs are managed
with r10k and https://github.com/mdechiaro/puppet-control-repo.

This is not for production use.

## TODO (in no order)
* Add dashboards (puppetboard, prometheus)
* Add psql database replication
* Add puppetdb replication
* Add puppetca replication
* Add choria orchestrator
* Add a webhook or self-hosted runner for CI/CD on control repo

## Current Stack
```
# kubectl get pods -A | grep -v kube-system
NAMESPACE     NAME                               READY   STATUS    RESTARTS        AGE
default       dnsutils                           1/1     Running   0               73m
default       psql-dcc7bbc66-5jl6w               1/1     Running   0               73m
default       puppetca-78f7c89c8f-v6wjn          1/1     Running   0               73m
default       puppetdb-dbdbcc8bb-wxkq2           1/1     Running   0               45m
default       puppetserver-6d56786d58-89jtb      1/1     Running   0               50m
default       puppetserver-6d56786d58-dlzn6      1/1     Running   0               50m
default       puppetserver-6d56786d58-qc2x5      1/1     Running   0               50m
```

## Setup minikube image cache to faster deployments

```
minikube image load registry.k8s.io/e2e-test-images/jessie-dnsutils:1.3
minikube image load ghcr.io/voxpupuli/container-puppetdb:8.3.0-latest
minikube image load ghcr.io/voxpupuli/container-puppetserver:8.4.0-latest
minikube image load postgres
```

## Prep

```
minikube config set cpus 4
minikube config set memory 8192
```

## Apply deployment specs in puppet/ directory

```
kubectl apply -f puppet/
```

Use `minikube tunnel` in second terminal to test services with puppet
outside of minikube. Use `kubectl get services` to get those external
IPs. If external IPs are `<pending>`, then the tunnel isn't setup yet.

```
# kubectl get services -A -o wide
NAMESPACE     NAME         TYPE           CLUSTER-IP      EXTERNAL-IP     PORT(S)                  AGE   SELECTOR
default       kubernetes   ClusterIP      10.96.0.1       <none>          443/TCP                  22h   <none>
default       postgres     ClusterIP      10.111.26.163   <none>          5432/TCP                 22h   app.kubernetes.io/name=psql
default       puppet       LoadBalancer   10.100.87.56    10.100.87.56    8140:31525/TCP           22h   app.kubernetes.io/name=puppetserver
default       puppetca     LoadBalancer   10.111.47.194   10.111.47.194   8140:30443/TCP           22h   app.kubernetes.io/name=puppetca
default       puppetdb     ClusterIP      10.99.145.34    <none>          8081/TCP                 22h   app.kubernetes.io/name=puppetdb
kube-system   kube-dns     ClusterIP      10.96.0.10      <none>          53/UDP,53/TCP,9153/TCP   11d   k8s-app=kube-dns
```

Add `EXTERNAL-IP` for puppet, puppetca services to `/etc/hosts` on the
external agent you want to register to this stack. IPs can change, so
check output of `kubectl get services -A -o wide` to get correct IPs.

```
# /etc/hosts
10.100.87.56 puppet.default.svc.cluster.local
10.111.47.194 puppetca.default.svc.cluster.local
```

You can verify dns is working with:

```
kubectl exec -i -t dnsutils -- nslookup <service>
```

## Cleanup

```
rake delete_stack
```

## Workaround for iptables

If you have docker and lxd / lxc installed on same machine.

```
# https://discuss.linuxcontainers.org/t/lxd-and-docker-firewall-redux-how-to-deal-with-forward-policy-set-to-drop/9953
sudo iptables -I DOCKER-USER  -j ACCEPT
sudo iptables-save
```
